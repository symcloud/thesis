digraph hierarchy {
	size="5,5"
	node[shape=record]
	edge[dir=back, arrowtail=empty]

	Model[label = "{Model|+ hash|}"]
	DistributedModel[label = "{DistributedModel|}"]

	PolicyCollection[label = "{PolicyCollection|}"]
	Policy[label = "{Policy|}"]
	ReplicatorPolicy[label = "{ReplicatorPolicy|+ primaryServer : Server\l+ backupServers : Server[]\l|}"]
	SecurityPolicy[label = "{SecurityPolicy|+ owner : User\l+ users : UserPermission[]\l|}"]

	TreeNode[label = "{TreeNode|+ path : string\l+ name : string\l|}"]
	Commit[label = "{Commit|+ message : string\l+ committer : User\l+ createdAt : DateTime\l|}"]
	Chunk[label = "{Chunk|+ data : string\l+ length : integer\l|}"]
	Reference[label = "{Reference|+ name : string\l+ user : User\l|}"]
	TreeFile[label = "{TreeFile|+ metadata : array\l+ version : integer\l+ fileHash : string\l+ size : integer\l+ mimetype : string|}"]
	Tree[label = "{Tree|}"]

	DistributedModelEdge[shape=circle,width=.01,height=.01,label=""]
	TreeNodeEdge[shape=circle,width=.01,height=.01,label=""]

	Model -> DistributedModel
	DistributedModel -> DistributedModelEdge
	TreeNode -> TreeNodeEdge

	Policy -> ReplicatorPolicy
	Policy -> SecurityPolicy

 	{rank=same; DistributedModel PolicyCollection Policy}
 	{rank=same; TreeNode Chunk Commit Reference}
	{rank=same; Tree TreeFile}

	edge[arrowhead="none",arrowtail="none"]
	DistributedModelEdge -> {TreeNode;Commit;Chunk;Reference}
	TreeNodeEdge -> {TreeFile;Tree}

	edge[arrowhead="none",arrowtail="none",headlabel="1"]
	DistributedModel -> PolicyCollection
	Reference -> Commit[label="commit"]
	Commit -> Tree[label="rootTree"]

	edge [arrowhead="none",arrowtail="none",headlabel="0..*"]
	PolicyCollection -> Policy[label="policies"]
	Tree -> TreeNode[label="children"]
	TreeFile -> Chunk[label="chunks"]
}